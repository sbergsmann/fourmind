name: "Manual Version Bump and Tag"

on:
  workflow_dispatch:
    inputs:
      bump:
        description: "Which version to bump?"
        required: true
        default: patch
        type: choice
        options:
          - patch
          - minor
          - major

permissions:
  contents: write

jobs:
  bump_and_tag:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout main branch
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0  # fetch tags too

      - name: Install uv
        uses: astral-sh/setup-uv@v6
      - name: Calculate new version
        id: bump
        run: |
          current=$(uv version | awk '{ print $2 }')  # only version number
          echo "Current version: $current"

          IFS='.' read -r major minor patch <<< "$current"
          bump="${{ github.event.inputs.bump }}"

          case "$bump" in
            patch) new_version="${major}.${minor}.$((patch + 1))" ;;
            minor) new_version="${major}.$((minor + 1)).0" ;;
            major) new_version="$((major + 1)).0.0" ;;
            *) echo "Invalid bump type"; exit 1 ;;
          esac

          echo "Bumping $bump â†’ $new_version"
          echo "NEW_VERSION=$new_version" >> $GITHUB_OUTPUT

      - name: Check if tag already exists
        id: check_tag
        run: |
          git fetch --tags
          tag="v${{ steps.bump.outputs.NEW_VERSION }}"
          if git rev-parse "$tag" >/dev/null 2>&1; then
            echo "Tag $tag already exists. Skipping."
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "Tag $tag does not exist."
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Set version with uv
        if: steps.check_tag.outputs.exists == 'false'
        run: |
          uv version "${{ steps.bump.outputs.NEW_VERSION }}"

      - name: Commit version bump
        if: steps.check_tag.outputs.exists == 'false'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add pyproject.toml uv.lock
          git commit -m "Bump version to v${{ steps.bump.outputs.NEW_VERSION }}"
          git push origin main

      - name: Create and push Git tag
        if: steps.check_tag.outputs.exists == 'false'
        run: |
          tag="v${{ steps.bump.outputs.NEW_VERSION }}"
          git tag -a "$tag" -m "Release $tag"
          git push origin "$tag"
