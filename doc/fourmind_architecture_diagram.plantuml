@startuml Fourmind Architecture Diagram

actor Backend as backend
control TuringGame as tg
participant Bot as bot
queue MessageQueue as mq
collections ChatStorage as cs
entity "LLM Server" as llm

activate tg

== Spin Up Phase ==
backend -> bot ++ #Lime: Startup
bot -> tg: Connect
bot -> cs: Instantiate chat storage
bot -> mq: Instantiate message queue
deactivate bot

== Main Phase ==
tg -> bot ++ #Lime: New game
bot -> cs: Create chat
bot -> mq ++ #SkyBlue: Create queue
deactivate bot

tg -> bot ++ #Lime: New message

group FourMind

bot -> cs: Store message as **ChatMessage**
bot -> mq: Add **ChatMessage** to queue
mq -> mq ++ #Blue: Get message\nfrom queue
mq -> llm ++ #Orange: Four-Sides Model\n Analysis
return **RichChatMessage**
deactivate llm

mq -> cs: Store **RichChatMessage**
deactivate mq

bot -> bot ++ #LimeGreen: Generate response

bot -> llm ++ #Orange: Simulate chat
return response

bot -> bot: Generic message splitting
bot -> bot: Calculate \nremaining response time
deactivate
end
bot --> tg: response
deactivate bot

tg -> bot ++ #Lime: End Game
bot -> backend: Persist chat
bot -> cs!!: Delete chat
bot -> mq!!: Delete queue
deactivate bot

== Tear Down Phase ==
backend -> bot: Shutdown
bot -> cs!!: Close all chats
bot -> mq!!: Kill all chat queues
bot -> bot!!: Shutdown

@enduml